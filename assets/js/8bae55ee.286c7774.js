"use strict";(self.webpackChunkgraphql_docs=self.webpackChunkgraphql_docs||[]).push([[862],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(l,".").concat(m)]||d[m]||s[m]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8958:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return s}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],c={sidebar_position:6},l="Complex Objects continued",p={unversionedId:"tutorial-query/complex-objects-continued",id:"tutorial-query/complex-objects-continued",title:"Complex Objects continued",description:"Let's update the schema to expand the movie type with actors",source:"@site/docs/tutorial-query/complex-objects-continued.md",sourceDirName:"tutorial-query",slug:"/tutorial-query/complex-objects-continued",permalink:"/graphql-docs/docs/tutorial-query/complex-objects-continued",draft:!1,editUrl:"https://github.com/codecentricnl/flutter_basic_workshop/tree/master/docs/docs/tutorial-query/complex-objects-continued.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Complex Objects (Result)",permalink:"/graphql-docs/docs/tutorial-query/complex-objects-result"},next:{title:"N+1",permalink:"/graphql-docs/docs/tutorial-query/n+1"}},u={},s=[],d={toc:s};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"complex-objects-continued"},"Complex Objects continued"),(0,a.kt)("p",null,"Let's update the schema to expand the movie type with actors"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"type Query {\n    helloWorld(name: String!): String!\n    movies: [Movie!]!\n}\ntype Movie {\n    imdbId: String!\n    title: String!\n    releaseDate: String!\n    actors: [Actors!]!\n}\n\ntype Actor {\n    name: String\n    dateOfBirth: String\n}\n")),(0,a.kt)("p",null,"As you probably have noticed is that the ",(0,a.kt)("inlineCode",{parentName:"p"},"Movie")," type has a nested Object.\nThe GraphQL engine will try to get all actors for a specific Movie.\nWe can tell the GraphQL engine how to resolve the actors via the annotation ",(0,a.kt)("inlineCode",{parentName:"p"},"@SchemaMapping")),(0,a.kt)("p",null,"These schema mappings accept a type, which should map to the parent type.\nThe method is the field that needs to be resolved."),(0,a.kt)("p",null,"So: "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},"query {\n    //movies maps to @QueryMapping\n    movies {\n        //actors maps to @SchemaMapping\n        actors {\n            name\n        }\n    }\n}\n")),(0,a.kt)("p",null,"Add the following method in your ",(0,a.kt)("inlineCode",{parentName:"p"},"MovieController")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'    @SchemaMapping\n    public List<Actor> actors(Movie movie) {\n        return List.of(\n                new Actor("Christian Bale", LocalDate.of(1974, 1, 30))\n        );\n    }\n')),(0,a.kt)("p",null,"And the following data class"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java",metastring:'title="Actor.java"',title:'"Actor.java"'},"public record Actor(String name, LocalDate dateOfBirth, List<String> appearsInIMDBId) {}\n")),(0,a.kt)("p",null,"Try this out or get it to work.\nLet us know if you are hitting into issues."))}m.isMDXComponent=!0}}]);