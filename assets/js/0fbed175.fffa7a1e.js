"use strict";(self.webpackChunkclean_hexagonal_onion_docs=self.webpackChunkclean_hexagonal_onion_docs||[]).push([[334],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,m=u["".concat(c,".").concat(d)]||u[d]||h[d]||a;return n?o.createElement(m,i(i({ref:t},p),{},{components:n})):o.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},340:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return h},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return s}});var o=n(3117),r=(n(7294),n(3905));const a={sidebar_position:1},i="1: Workshop Intro",l={unversionedId:"intro",id:"intro",title:"1: Workshop Intro",description:"Welcome to the Clean Hexagonal Onion with a Dash of DDD in Spring workshop at J-Spring 2025.",source:"@site/docs/1.intro.md",sourceDirName:".",slug:"/intro",permalink:"/clean-hexagonal-onion-docs/docs/intro",draft:!1,editUrl:"https://github.com/MaikKingma/clean-hexagonal-onion-docs/docs/1.intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"2: Check out the Spring service",permalink:"/clean-hexagonal-onion-docs/docs/setting-up-an-initial-application"}},c={},s=[{value:"Getting Help",id:"getting-help",level:2},{value:"Time management",id:"time-management",level:3},{value:"Example:",id:"example",level:4},{value:"What you will need",id:"what-you-will-need",level:3},{value:"TDD",id:"tdd",level:3},{value:"Side note",id:"side-note",level:3}],p={toc:s},u="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"1-workshop-intro"},"1: Workshop Intro"),(0,r.kt)("p",null,"Welcome to the ",(0,r.kt)("strong",{parentName:"p"},"Clean Hexagonal Onion with a Dash of DDD in Spring")," workshop at J-Spring 2025.\nMy name is Maik Kingma, and I will be your coach for today. Since I cannot be with everyone simultaneously,\nthese docs will provide you with a step-by-step guide."),(0,r.kt)("h2",{id:"getting-help"},"Getting Help"),(0,r.kt)("p",null,"I will do my best to answer all the questions. We will have a few sync moments throughout the workshop, where we can\ndiscuss questions together. Keep validating your work after every chapter.\nIn case you get stuck somewhere along the way, you can always continue the workshop on a code base snapshot from\none of the prepared branches that provide you the solution of each chapter."),(0,r.kt)("h3",{id:"time-management"},"Time management"),(0,r.kt)("p",null,"There are 7 implementation chapters in total. They become increasingly complex. Today we only have 2 hours, let's see\nhow far we get. The workshop will remain online so you can continue at home as well.\nAt the end of each section, there is a git branch reference with which you can continue to the next chapter,\nin case you got stuck."),(0,r.kt)("h4",{id:"example"},"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'if (allTestsGreen == true) {\n    log.info("DONE! Let\'s move on to the next topic: XXX")}\nelse{\n    log.error("Shout for help!") || (git stash && git checkout 5-persist-author-data-done)\n}\n')),(0,r.kt)("h3",{id:"what-you-will-need"},"What you will need"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"JDK 17"),(0,r.kt)("li",{parentName:"ul"},"Maven (optional)"),(0,r.kt)("li",{parentName:"ul"},"Docker Desktop"),(0,r.kt)("li",{parentName:"ul"},"An IDE of your choice (ideally IntelliJ)"),(0,r.kt)("li",{parentName:"ul"},"an Internet connection")),(0,r.kt)("h3",{id:"tdd"},"TDD"),(0,r.kt)("p",null,"If you want there is the possibility to do Test Driven Development. At the end of each chapter you\nwill find a happy flow unit test, in some cases also an integration test. You can use these to do TDD.\nIf you want an even more guided approach, I prepared TDD branches for each chapter in the repository. Ideally, only\nuse those if you are entirely stuck."),(0,r.kt)("h3",{id:"side-note"},"Side note"),(0,r.kt)("p",null,"The purpose of this workshop is to get to know the Clean Hexagonal Onion pattern and how to apply it in combination with\nsome DDD in a Spring Boot application. I do not intend to have full test coverage in this project. Instead, the provided\nunit-tests usually only test the happy flow, paired with an occasional integration test or two."))}h.isMDXComponent=!0}}]);