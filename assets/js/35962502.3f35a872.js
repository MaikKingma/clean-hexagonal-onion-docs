"use strict";(self.webpackChunkgraphql_docs=self.webpackChunkgraphql_docs||[]).push([[622],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):u(u({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(r),f=a,d=m["".concat(i,".").concat(f)]||m[f]||s[f]||o;return r?n.createElement(d,u(u({ref:t},p),{},{components:r})):n.createElement(d,u({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,u=new Array(o);u[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,u[1]=c;for(var l=2;l<o;l++)u[l]=r[l];return n.createElement.apply(null,u)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6731:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return i},default:function(){return f},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return s}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),u=["components"],c={sidebar_position:3},i="Accept an argument from a query",l={unversionedId:"tutorial-query/accept-an-argument-from-a-query",id:"tutorial-query/accept-an-argument-from-a-query",title:"Accept an argument from a query",description:"So we can get some data, that's cool. But what if we wanted to provide an argument with our queries.",source:"@site/docs/tutorial-query/accept-an-argument-from-a-query.md",sourceDirName:"tutorial-query",slug:"/tutorial-query/accept-an-argument-from-a-query",permalink:"/docs/tutorial-query/accept-an-argument-from-a-query",draft:!1,editUrl:"https://github.com/codecentricnl/flutter_basic_workshop/tree/master/docs/docs/tutorial-query/accept-an-argument-from-a-query.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Create a resolver (Result)",permalink:"/docs/tutorial-query/create-a-resolver-result"},next:{title:"Complex Objects",permalink:"/docs/tutorial-query/complex-objects"}},p={},s=[],m={toc:s};function f(e){var t=e.components,r=(0,a.Z)(e,u);return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"accept-an-argument-from-a-query"},"Accept an argument from a query"),(0,o.kt)("p",null,"So we can get some data, that's cool. But what if we wanted to provide an argument with our queries.\nWe need to update our schema. The ",(0,o.kt)("inlineCode",{parentName:"p"},"helloWorld")," query should accept an argument of the type ",(0,o.kt)("inlineCode",{parentName:"p"},"String"),"\nYour schema should look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"type Query {\n    helloWorld(name: String!): String!\n}\n")),(0,o.kt)("p",null,"We can accept arguments with an ",(0,o.kt)("inlineCode",{parentName:"p"},"@Argument")," annotation on the arguments of your method."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'    @QueryMapping\n    public String helloWorld(@Argument String name) {\n        return "Hello " + name;\n    }\n')))}f.isMDXComponent=!0}}]);